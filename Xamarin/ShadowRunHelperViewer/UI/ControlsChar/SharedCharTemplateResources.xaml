<ResourceDictionary xmlns="http://xamarin.com/schemas/2014/forms"
xmlns:sfsegmentedcontrol="clr-namespace:Syncfusion.XForms.Buttons;assembly=Syncfusion.Buttons.XForms"
                    xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                    xmlns:CharModel="clr-namespace:ShadowRunHelper.CharModel;assembly=SharedCode"
                    xmlns:segmentCollection="clr-namespace:System.Collections.Generic;assembly=netstandard"
                     xmlns:local="clr-namespace:ShadowRunHelperViewer"
                     xmlns:resx="clr-namespace:ShadowRunHelperViewer.Strings"
                    x:Class="ShadowRunHelperViewer.UI.CharTemplates.SharedCharTemplateResources">
    <ResourceDictionary.MergedDictionaries>
        <local:CharModelStyles/>
    </ResourceDictionary.MergedDictionaries>
    <Style x:Key="ControllerIconButton" TargetType="Button" BasedOn="{StaticResource IconButton}">
        <Setter Property="Padding" Value="5"/>
    </Style>
    <Style x:Key="STDText" TargetType="Label">
        <Setter Property="VerticalOptions" Value="Center"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="LineBreakMode" Value="CharacterWrap"/>
        <Setter Property="MaxLines" Value="2"/>
    </Style>
    <Style x:Key="STDTextCenter" TargetType="Label" BasedOn="{StaticResource STDText}">
        <Setter Property="HorizontalTextAlignment" Value="Center"/>
    </Style>
    <Style x:Key="HeadLineText" TargetType="Label" BasedOn="{StaticResource STDText}">
        <Setter Property="Margin" Value="0"/>
        <Setter Property="LineBreakMode" Value="TailTruncation"/>
        <Setter Property="MaxLines" Value="1"/>
    </Style>
    <Style x:Key="AdditionalValueScrollView" TargetType="ScrollView">
        <Setter Property="Orientation" Value="Horizontal"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Always"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Always"/>
    </Style>
    <Style x:Key="AdditionalValuePanel" TargetType="StackLayout">
        <Setter Property="Orientation" Value="Horizontal"/>
    </Style>

    <ControlTemplate x:Key="Thing_Name_H">
        <StackLayout Style="{DynamicResource TemplateStack}">
            <Label Text="{resx:ModelResources Thing_Bezeichner}" Style="{StaticResource HeadLineText}"/>
        </StackLayout>
    </ControlTemplate>
    <ControlTemplate x:Key="Thing_Name" x:DataType="CharModel:Thing">
        <StackLayout BindingContext="{TemplateBinding BindingContext}" Style="{DynamicResource TemplateStack}">
            <Label x:Name="Typ" Text="{x:Binding Typ}" Style="{StaticResource STDText}"/>
            <Label Text=":" Style="{StaticResource STDText}" Margin="0,0,2,0">
                <Label.Triggers>
                    <DataTrigger TargetType="Label"
                                    Binding="{Binding Source={x:Reference Typ}, Path=Text.Length}"
                                    Value="0">
                        <Setter Property="IsVisible" Value="False"/>
                    </DataTrigger>
                </Label.Triggers>
            </Label>
            <Label Text="{x:Binding Bezeichner}" Style="{StaticResource STDText}"/>
        </StackLayout>
    </ControlTemplate>
    <ControlTemplate x:Key="Thing_Value_H">
        <StackLayout Style="{DynamicResource TemplateStack}">
            <Label Text="{resx:ModelResources Thing_Wert}" Style="{StaticResource HeadLineText}"/>
        </StackLayout>
    </ControlTemplate>
    <ControlTemplate x:Key="Thing_Value" x:DataType="CharModel:Thing">
        <StackLayout BindingContext="{TemplateBinding BindingContext}" Style="{DynamicResource TemplateStack}" Orientation="Horizontal">
            <Label Text="{x:Binding Value.TrueValue}" Style="{StaticResource STDText}"/>
            <Label Text="{x:Binding Zusatz}" Style="{StaticResource STDText}"/>
        </StackLayout>
    </ControlTemplate>
    <ControlTemplate x:Key="Thing_Notes" x:DataType="CharModel:Thing">
        <StackLayout BindingContext="{TemplateBinding BindingContext}" Style="{DynamicResource TemplateStack}">
            <Label Text="{x:Binding Notiz}" LineBreakMode="WordWrap"/>
        </StackLayout>
    </ControlTemplate>

    <ControlTemplate x:Key="Thing_H">
        <Grid Style="{DynamicResource TemplateGrid}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentView Grid.Column="0" ControlTemplate="{StaticResource Thing_Name_H}"/>
            <ContentView Grid.Column="2" ControlTemplate="{StaticResource Thing_Value_H}"/>
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="ItemsBoxesH" x:DataType="CharModel:Item">
        <Grid Style="{DynamicResource TemplateGrid}" WidthRequest="100" ColumnSpacing="0" RowSpacing="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Text="{resx:ModelResources Item_State}" VerticalOptions="Center" HorizontalOptions="Center"/>
        </Grid>
    </ControlTemplate>
    <ControlTemplate x:Key="ItemsBoxes" x:DataType="CharModel:Item">
        <Grid Style="{DynamicResource TemplateGrid}" ColumnSpacing="0" RowSpacing="0" BindingContext="{TemplateBinding BindingContext}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Label Grid.Column="1" Text="{x:Binding State, Converter={StaticResource O_ItemState2String}}" Margin="4,0,4,0" VerticalOptions="Center"/>
            <sfsegmentedcontrol:SfSwitch AllowIndeterminateState="True" IsOn="{x:Binding State}" Grid.Column="0" VerticalOptions="Center" HorizontalOptions="Center">
                <sfsegmentedcontrol:SfSwitch.WidthRequest>
                    <OnPlatform x:TypeArguments="x:Double">
                        <OnPlatform.Platforms>
                            <On Platform="iOS" Value="-1"/>
                            <On Platform="Android" Value="80"/>
                            <On Platform="UWP" Value="-1"/>
                        </OnPlatform.Platforms>
                    </OnPlatform>
                </sfsegmentedcontrol:SfSwitch.WidthRequest>
            </sfsegmentedcontrol:SfSwitch>
        </Grid>
    </ControlTemplate>
</ResourceDictionary>